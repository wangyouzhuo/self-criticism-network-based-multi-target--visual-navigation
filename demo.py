import h5py
import matplotlib.pyplot as plt
import matplotlib as mpl
import numpy as np


"""
    不同距离的state-value对比
"""



file_path = '/home/wyz/PycharmProjects/distill-based-multi-target-visual-naviigation/data/'
scene_name = 'bedroom_04.h5'
h5_file_path = file_path+scene_name

h5_file     = h5py.File(h5_file_path, 'r')
shortest_path_distances = h5_file['shortest_path_distance'][()]

Distance = [1,5,10,15,20,25,30,35]
Target_id = 360

print("target id:",Target_id)

id_list = [0,2,9,11,21,23,28,30,40,42,45,47,48,50,53,55,60,62,
          69,71,72,74,76,78,93,95,101,103,105,107,108,110,125,
          127,137,139,140,142,160,162,165,167,180,182,185,187,
          200,202,205,207,220,222,225,227,241,243,244,246,261,
          263,264,266,281,283,284,286,300,302,312,314,328,330,
          333,335,361,363,369,371,377,379,380,382]

bad_value_list  = [0,0.14124609529972076,0.09230392426252365,0.07584894448518753,0.07984284311532974,0.08244513720273972,0.036861781030893326,0.12233559787273407,0.07628203183412552,0.1436522901058197,0.1016051396727562,0.0689171627163887,0.17219947278499603,0.13287809491157532,0.10483995825052261,0.11991897970438004,0.12623654305934906,0.1519763469696045,0.12021073698997498,0.1317334622144699,0.11230207979679108,0.10854093730449677,0.13943220674991608,0.14143313467502594,0.1316293478012085,0.11778617650270462,0.12182765454053879,0.15707531571388245,0.10687673836946487,0.15301387012004852,0.1178395226597786,0.1582270860671997,0.09874197840690613,0.11625375598669052,0.1467856466770172,0.0500250905752182,0.1818571388721466,0.19060496985912323,0.16926296055316925,0.1230701133608818,0.0958680659532547,0.19845148921012878,0.12807144224643707,0.16140635311603546,0.11086918413639069,0.11798323690891266,0.1323722004890442,0.13020311295986176,0.13958919048309326,0.08299846947193146,0.19080810248851776,0.15731042623519897,0.15653468668460846,0.011927502229809761,0.21990948915481567,0.1460411697626114,0.08991991728544235,0.1550399512052536,0.1561441868543625,0.11955506354570389,0.1237562969326973,0.14401818811893463,0.18589085340499878,0.07645288854837418,0.14607088267803192,0.18786978721618652,0.19163598120212555,0.06751514226198196,0.13509254157543182,0.20366539061069489,0.1782386153936386,0.08084321022033691,0.10800719261169434,0.11919774860143661,0.13744592666625977,0.11146105825901031,0.11887373775243759,0.09946658462285995,0.08074399828910828,0.1256788820028305,0.07220437377691269,0.12529899179935455,0.18363972008228302]

good_value_list = [0,0.48249825835227966,0.9805282950401306,0.8676405549049377,1.0849109888076782,1.0964852571487427,0.8140579462051392,0.7267056703567505,0.9691181778907776,1.012539267539978,1.1897903680801392,1.467907428741455,0.9919360280036926,4.988736152648926,4.994103908538818,4.665743350982666,4.981754779815674,3.1428565979003906,3.4911859035491943,2.1623473167419434,2.262350559234619,2.361685276031494,2.428626298904419,1.5364866256713867,1.7488257884979248,4.3640360832214355,5.465179920196533,3.719839096069336,5.595901012420654,3.295603036880493,3.5786616802215576,3.156538724899292,3.307382106781006,2.111429214477539,2.9292731285095215,1.728925108909607,1.6188987493515015,1.448601245880127,1.5273209810256958,5.594080448150635,5.925604820251465,3.9717447757720947,5.560149192810059,3.076793670654297,3.6952202320098877,2.810478448867798,4.033051013946533,2.4132497310638428,2.3918089866638184,1.906882405281067,2.707810878753662,1.4713027477264404,1.5762357711791992,1.521621823310852,1.7441977262496948,3.1709072589874268,3.2098448276519775,3.2245521545410156,3.7930185794830322,2.579815626144409,2.483567237854004,2.218787431716919,2.376847267150879,1.7450417280197144,1.651748776435852,1.3225107192993164,1.4509508609771729,7.84782075881958,5.841944694519043,1.3881789445877075,1.4467436075210571,7.853711128234863,6.2183451652526855,6.159047603607178,7.093633651733398,8.808220863342285,9.280943870544434,2.1531362533569336,2.6382198333740234,2.2346227169036865,2.408587694168091,1.9140207767486572,2.5214834213256836]

for item in [id_list,bad_value_list,good_value_list]:
    print(len(item))


good_dict = dict()
bad_dict = dict()

for id in id_list:
    id_index = id_list.index(id)
    good_value = good_value_list[id_index]
    bad_value  = bad_value_list[id_index]
    good_dict[id] = good_value
    bad_dict[id]  = bad_value

state_id_list = []


good_result = []
bad_result  = []
distance_list = []

for distance in Distance:
    distance_result = []
    for i in range(408):
        if shortest_path_distances[i][Target_id] == distance:
            distance_result.append(i)
            state_id_list.append(i)
    #print("distance:",distance,"targte_id:",distance_result)
    mean_bad_value,mean_good_value = 0,0
    for id in distance_result:
        mean_bad_value  = mean_bad_value + bad_dict[id]
        mean_good_value = mean_good_value + good_dict[id]
    mean_bad_value  = mean_bad_value/len(distance_result)
    mean_good_value = mean_good_value/len(distance_result)
    print("distance:",distance,
          #"|| id_list:",distance_result,
          "||  good_value:",mean_good_value,
          "|| bad_value:",mean_bad_value)
    distance_list.append(distance)
    good_result.append(mean_good_value)
    bad_result.append(mean_bad_value)

print(state_id_list)

print(distance_list)
print(good_result)
print(bad_result)

distance_list = [item for item in range(len(distance_list))]
BAR_WIDTH = 0.4

x1 = distance_list
x2 = [item+BAR_WIDTH for item in distance_list]

# plt.xlim(0, 100000)  # 限定横轴的范围
plt.ylim(0,10.0)  # 限定纵轴的范围

# mpl.rcParams['font.sans-serif'] = ['SimHei']
# mpl.rcParams['axes.unicode_minus'] = False
# plt.figure(figsize=(8,6))

plt.bar(x1,good_result,BAR_WIDTH,align = 'center',label="Target-special Network over a single target",color = '#009ad6')
plt.bar(x2,bad_result,BAR_WIDTH,label="Baseline model over 30 targets", color='#f58220')

plt.tick_params(labelsize=20)

plt.legend(prop = {'size':15})
plt.xlabel('Distance of state from target'  ,fontsize = 20)
plt.ylabel('Average state value',fontsize = 20)
#设置x轴刻度标签
plt.xticks([item+BAR_WIDTH*0.5 for item in np.arange(len(Distance))],[str(item) for item in Distance])
plt.title('The state value of different distance',fontsize = 20)
plt.show()
